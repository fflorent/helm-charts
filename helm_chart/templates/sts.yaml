{{- $envVars := include "common.env.transformDict" .Values.envVars -}}
{{- $fullName := include "common.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  annotations:
    filesChecksum: {{ .Values.mountFiles | toJson | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  serviceName: {{ $fullName }}
  template:
    metadata:
      annotations:
        filesChecksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      {{- if $.Values.image.credentials }}
      imagePullSecrets:
        - name: {{ include "common.secret.dockerconfigjson.name" (dict "fullname" $fullName "imageCredentials" $.Values.image.credentials) }}
      {{- end}}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $envVars}}
          env:
            {{- $envVars | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.monitoring.exporter.enabled }}
            - name: metrics
              containerPort: {{ .Values.monitoring.exporter.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.probes.liveness }}
          livenessProbe:
            {{- if .Values.probes.liveness.exec }}
            exec:
            {{- toYaml .Values.probes.liveness.exec | nindent 14 }}
            {{- else if .Values.probes.liveness.tcpSocket }}
            tcpSocket:
            {{- toYaml .Values.probes.liveness.tcpSocket | nindent 14 }}
            {{- else }}
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.service.targetPort }}
            {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          {{- end }}
          {{- if .Values.probes.readiness }}
          readinessProbe:
            {{- if .Values.probes.readiness.exec }}
            exec:
              {{- toYaml .Values.probes.readiness.exec | nindent 14 }}
            {{- else if .Values.probes.readiness.tcpSocket }}
            tcpSocket:
            {{- toYaml .Values.probes.readiness.tcpSocket | nindent 14 }}
            {{- else }}
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.service.targetPort }}
            {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /persist
              name: data
            {{- range $index, $value := .Values.mountFiles }}
            - name: "files-{{ $index }}"
              mountPath: {{ $value.path }}
              subPath: content
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- range $index, $value := .Values.mountFiles }}
        - name: "files-{{ $index }}"
          configMap:
            name: "{{ $fullName }}-files-{{ $index }}"
        {{- end }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
