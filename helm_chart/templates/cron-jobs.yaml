{{- $fullName := include "common.fullname" . -}}
{{- $serviceAccountName := include "common.serviceAccountName" . -}}
{{- if .Values.backup.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $fullName }}-backup"
  labels:
  {{- include "common.labels" $ | nindent 4 }}
spec:
  schedule: "{{ .Values.backup.schedule }}"
  failedJobsHistoryLimit: 10
  successfulJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        spec:
          restartPolicy: OnFailure
          {{- if .Values.image.credentials }}
          imagePullSecrets:
            - name: {{ include "common.secret.dockerconfigjson.name" (dict "fullname" $fullName "imageCredentials" $.Values.image.credentials) }}
          {{- end}}
          serviceAccountName: {{ $serviceAccountName }}
          containers:
            - name: "backup"
              image: "{{ .Values.backup.image.repository }}:{{ .Values.backup.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
              env:
                - name: S3_ENDPOINT_URL
                  value: {{ .Values.backup.s3.endpoint }}
                - name: S3_REGION
                  value: {{ .Values.backup.s3.region }}
                - name: S3_BUCKET
                  value: {{ .Values.backup.s3.bucket }}
                - name: S3_ACCESS_KEY
                  value: {{ .Values.backup.s3.accessKey }}
                - name: S3_SECRET_KEY
                  value: {{ .Values.backup.s3.secretKey }}
              {{- with .Values.backup.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              volumeMounts:
                - mountPath: /data/
                  name: grist
          volumes:
            - name: grist
              persistentVolumeClaim:
                claimName: "data-{{ $fullName }}-0"
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - {{ include "common.name" . }}
                      - key: app.kubernetes.io/instance
                        operator: In
                        values:
                          - {{ .Release.Name }}
                  topologyKey: kubernetes.io/hostname
{{- end -}}
