# Default values for grist.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Image to use for grist workers, can be overridden individually
image:
  repository: gristlabs/grist
  pullPolicy: IfNotPresent
#  credentials:
#    name: foo
#    registry: "gitlab.com"
#    username: "user"
#    password: "pass"
  tag: "1.1.7"

nameOverride: ""
fullnameOverride: ""

homeWorker:
  # image:
  #   repository: gristlabs/grist
  #   pullPolicy: IfNotPresent
  #   tag: "1.1.7"

  # Override container command
  command:
    - "docker-entrypoint.sh"
  args:
    - "/bin/sh"
    - "-c"
    - "./sandbox/run.sh"

  replicas: 1

  securityContext: null

  envVars: {}

  podAnnotations: {}

  service:
    type: ClusterIP
    port: 80
    targetPort: 8484
    annotations: {}

  probes:
    liveness:
      path: /status
      initialDelaySeconds: 10
    startup:
      path: /status
      initialDelaySeconds: 10

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

docWorker:
  # image:
  #   repository: gristlabs/grist
  #   pullPolicy: IfNotPresent
  #   tag: "1.1.7"

  # Override container command
  command:
    - "docker-entrypoint.sh"
  args:
    - "/bin/sh"
    - "-c"
    - "./sandbox/run.sh"

  replicas: 3

  securityContext: null

  envVars: {}

  podAnnotations: {}

  service:
    type: ClusterIP
    port: 80
    targetPort: 8484
    annotations: {}

  probes:
    liveness:
      path: /status
      initialDelaySeconds: 10
    startup:
      path: /status
      initialDelaySeconds: 10

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Allows mounting any file anywhere on the worker pods
mountFiles: []
  # - path: /path/to/file/on/pod.txt
  #   # base64 encoded file content
  #   content: YmFzZTY0IGVuY29kZWQgY29udGVudAp3aXRoIG11bHRpbGluZSBzdXBwb3J0Cg==

ingress:
  className: null
  enabled: false
  host: null
  path: /
  hosts: []
  #  - host: chart-example.local
  #    paths: []
  tls:
    enabled: true
    additional: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

loadBalancer:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: 1.25.3

  replicas: 2

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

  envVars: {}

  podAnnotations: {}

  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
    annotations: {}

  healthPort: 8080

  probes:
    liveness:
      path: /health
      targetPort: 8080
    startup:
      path: /health
      targetPort: 8080

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  volumeMounts:
    - name: cache
      mountPath: /var/cache/nginx/
    - name: run
      mountPath: /var/run
    - name: conf
      mountPath: /etc/nginx/conf.d

  volumes:
    - name: cache
      emptyDir: {}
    - name: run
      emptydir: {}
    - name: conf
      emptydir: {}
